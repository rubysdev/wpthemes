---
const categories = [
  'All',
  'Blog',
  'E-commerce',
  'Portfolio',
  'Business',
  'Magazine',
  'News',
  'Photography',
  'Personal',
  'Education',
  'Restaurant',
  'Travel',
  'Fashion',
  'Health',
  'Technology',
  'Sports',
  'Music',
  'Art',
  'Real Estate'
];

const initialVisibleCount = 6;
---

<div class="mb-8">
  <div class="flex flex-wrap gap-2" id="category-container">
    {categories.slice(0, initialVisibleCount).map(category => (
      <button 
        class="category-btn px-3 py-1 bg-gray-200 text-gray-700 rounded-full text-sm hover:bg-gray-300 transition-colors" 
        data-category={category}
      >
        {category}
      </button>
    ))}
    
    <button 
      id="show-more-btn"
      class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200 transition-colors flex items-center gap-1"
    >
      <span>More</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 transform transition-transform" id="chevron-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </button>
  </div>

  <!-- Hidden categories container -->
  <div 
    id="more-categories" 
    class="hidden mt-2 flex-wrap gap-2 transition-all duration-300 ease-in-out"
  >
    {categories.slice(initialVisibleCount).map(category => (
      <button 
        class="category-btn px-3 py-1 bg-gray-200 text-gray-700 rounded-full text-sm hover:bg-gray-300 transition-colors" 
        data-category={category}
      >
        {category}
      </button>
    ))}
  </div>
</div>

<script>
  const showMoreBtn = document.getElementById('show-more-btn');
  const moreCategories = document.getElementById('more-categories');
  const chevronIcon = document.getElementById('chevron-icon');
  let isExpanded = false;

  showMoreBtn.addEventListener('click', () => {
    isExpanded = !isExpanded;
    
    if (isExpanded) {
      moreCategories.classList.remove('hidden');
      moreCategories.classList.add('flex');
      chevronIcon.classList.add('rotate-180');
      showMoreBtn.querySelector('span').textContent = 'Less';
    } else {
      moreCategories.classList.remove('flex');
      moreCategories.classList.add('hidden');
      chevronIcon.classList.remove('rotate-180');
      showMoreBtn.querySelector('span').textContent = 'More';
    }
  });

  // Handle category selection
  const categoryButtons = document.querySelectorAll('.category-btn');
  let activeCategory = null;

  categoryButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Remove active state from previous button
      if (activeCategory) {
        activeCategory.classList.remove('bg-blue-500', 'text-white');
        activeCategory.classList.add('bg-gray-200', 'text-gray-700');
      }

      // Add active state to clicked button
      if (activeCategory !== button) {
        button.classList.remove('bg-gray-200', 'text-gray-700');
        button.classList.add('bg-blue-500', 'text-white');
        activeCategory = button;
      } else {
        activeCategory = null;
      }

      const category = button.getAttribute('data-category');
      document.dispatchEvent(new CustomEvent('categoryChange', { 
        detail: activeCategory ? category : 'All'
      }));
    });
  });

  // Handle window resize
  let resizeTimeout;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      if (window.innerWidth <= 640 && isExpanded) {
        moreCategories.style.maxHeight = moreCategories.scrollHeight + 'px';
      }
    }, 100);
  });
</script>